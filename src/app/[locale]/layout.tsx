import type { Metadata } from "next";
import { Josefin_Sans } from "next/font/google";
import "./globals.css";
import Header from "../components/Header/header";
import Footer from "../components/Footer/Footer";
import { NextIntlClientProvider, hasLocale } from 'next-intl';
import { notFound } from 'next/navigation';
import { routing } from '@/i18n/routing';

const josefinSans = Josefin_Sans({
  subsets: ['latin'],
  weight: ['100', '700'],
  variable: "--font-josefin-sans",
  display: 'swap',
})

export const metadata: Metadata = {
  title: "WebApp",
  description: "Generated by create next app",
};

// export default function RootLayout({
//   children,
// }: Readonly<{
//   children: React.ReactNode;
// }>) {
//   return (
//     <html lang="en">
//       <body className={josefinSans.variable}>
//         <Header />
//         {children}
//         <Footer/>
//       </body>
//     </html>
//   );
// }

export default async function LocaleLayout({
  children,
  params
}: {
  children: React.ReactNode;
  params: Promise<{ locale: string }>;
}) {
  // Ensure that the incoming `locale` is valid
  const { locale } = await params;
  if (!hasLocale(routing.locales, locale)) {
    notFound();
  }

  return (
    <html lang={locale}>
      <body className={josefinSans.variable}>
        <NextIntlClientProvider>
          <Header />
            {children}
          <Footer />
        </NextIntlClientProvider>
      </body>
    </html>
  );
}
